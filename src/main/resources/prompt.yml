prompt:
  qa-test: |
    당신은 숙련된 QA 엔지니어입니다. 제가 제공하는 코드를 자세히 분석하여 테스트 케이스 문서를 작성해주세요.

    코드 분석 후 다음 내용을 포함한 마크다운 형식의 테스트 문서를 생성해주세요:

    # 1. 코드 개요
    - 제공된 코드의 주요 목적과 기능 설명
    - 핵심 클래스/메소드와 그 역할
    - 사용된 주요 기술과 패턴

    # 2. 테스트 전략
    - 테스트 접근 방식 설명
    - 테스트 범위 및 우선순위

    # 3. 테스트 케이스
    아래 형식의 표로 작성해주세요:
    | ID | 테스트 항목 | 초기 조건 | 테스트 단계 | 예상 결과 | 테스트 유형 | 우선순위 |
    |---|------------|---------|-----------|----------|-----------|---------|
    | TC001 | ... | ... | ... | ... | 단위/통합/기능 | 상/중/하 |

    # 4. 엣지 케이스 및 예외 상황
    - 경계값, 예외 상황 등 특별히 테스트해야 할 케이스들

    # 5. 잠재적 문제점 및 개선사항
    - 코드 품질, 성능, 보안 측면에서 문제가 될 수 있는 부분
    - 코드 구조, 예외 처리, 테스트 용이성 등의 개선 제안

    # 6. 결론 및 요약
    - 테스트 케이스의 종합적 평가
    - 주요 테스트 포인트 요약

    요청한 형식을 엄격히 준수하면서, 실제 QA 전문가가 작성한 것 같은 상세하고 전문적인 테스트 문서를 작성해주세요. 테스트 케이스는 실행 가능하고 구체적이어야 합니다.

  source-analyze: |
    다음은 base64로 인코딩된 소스코드 파일입니다.
    
     Base64 인코딩된 소스코드:
     %s
  
     위 base64 문자열을 디코딩하여 소스코드를 분석하고 다음 내용을 제공해주세요:
    
      [제공할 내용]
      - 코드의 주요 기능과 목적
      
      [유의사항]
      - 해당 서비스가 어떤 기능을 하는지 작성해주세요.
      - 소스코드로 어떠한 기능을 동작하는 부분인지 작성해주세요.
      - 분석결과는 상세하고 구체적으로 작성해주세요.
      - 결과는 텍스트형식이어야 합니다, #,* 과 같은 마크업 문법은 제외시켜주세요
      - 해당 응답내용은 RAG내 서비스 정보 검색에 사용할 예정으로, 검색이 잘 되는 형식으로 응답해주세요

  rag-qa-test: |
    당신은 숙련된 QA 엔지니어입니다. 제가 제공하는 코드를 자세히 분석하여 테스트 케이스 문서를 작성해주세요.
    
    [제공 소스코드]
    다음 소스코드를 기반으로 테스트 케이스를 생성해주세요.
    소스코드는 base64로 인코딩 되어있습니다.
    %s
    
    [관련 참고 자료]
    다음 자료는 애플리케이션의 화면에 대한 정보를 분석해서 설명한 내용입니다.
    소스코드를 기반으로 테스트 케이스를 생성할때 참고해서, 소스코드와 연관되어 테스트가 필요하다고 판단되면 테스트 케이스를 만들어주세요.
    %s

    [응답 형식]
    코드 분석 후 다음 내용을 포함한 마크다운 형식의 테스트 문서를 생성해주세요:

    # 1. 코드 개요
    - 제공된 코드의 주요 목적과 기능 설명
    - 핵심 클래스/메소드와 그 역할
    - 사용된 주요 기술과 패턴

    # 2. 테스트 전략
    - 테스트 접근 방식 설명
    - 테스트 범위 및 우선순위

    # 3. 테스트 케이스
    아래 형식의 표로 작성해주세요:
    | ID | 테스트 항목 | 초기 조건 | 테스트 단계 | 예상 결과 | 테스트 유형 | 우선순위 |
    |---|------------|---------|-----------|----------|-----------|---------|
    | TC001 | ... | ... | ... | ... | 단위/통합/기능 | 상/중/하 |

    # 4. 엣지 케이스 및 예외 상황
    - 경계값, 예외 상황 등 특별히 테스트해야 할 케이스들

    # 5. 잠재적 문제점 및 개선사항
    - 코드 품질, 성능, 보안 측면에서 문제가 될 수 있는 부분
    - 코드 구조, 예외 처리, 테스트 용이성 등의 개선 제안

    # 6. 결론 및 요약
    - 테스트 케이스의 종합적 평가
    - 주요 테스트 포인트 요약
  no-rag-qa-test: |
    당신은 숙련된 QA 엔지니어입니다. 제가 제공하는 코드를 자세히 분석하여 테스트 케이스 문서를 작성해주세요.
    
    [제공 소스코드]
    다음 소스코드를 기반으로 테스트 케이스를 생성해주세요.
    소스코드는 base64로 인코딩 되어있습니다.
    %s

    [응답 형식]
    코드 분석 후 다음 내용을 포함한 마크다운 형식의 테스트 문서를 생성해주세요:

    # 1. 코드 개요
    - 제공된 코드의 주요 목적과 기능 설명
    - 핵심 클래스/메소드와 그 역할
    - 사용된 주요 기술과 패턴

    # 2. 테스트 전략
    - 테스트 접근 방식 설명
    - 테스트 범위 및 우선순위

    # 3. 테스트 케이스
    아래 형식의 표로 작성해주세요:
    | ID | 테스트 항목 | 초기 조건 | 테스트 단계 | 예상 결과 | 테스트 유형 | 우선순위 |
    |---|------------|---------|-----------|----------|-----------|---------|
    | TC001 | ... | ... | ... | ... | 단위/통합/기능 | 상/중/하 |

    # 4. 엣지 케이스 및 예외 상황
    - 경계값, 예외 상황 등 특별히 테스트해야 할 케이스들

    # 5. 잠재적 문제점 및 개선사항
    - 코드 품질, 성능, 보안 측면에서 문제가 될 수 있는 부분
    - 코드 구조, 예외 처리, 테스트 용이성 등의 개선 제안

    # 6. 결론 및 요약
    - 테스트 케이스의 종합적 평가
    - 주요 테스트 포인트 요약

  test-scenario-generation: |
    당신은 모바일 앱 테스트 전문가입니다. 주어진 소스 코드를 분석하여 테스트 시나리오를 생성하세요.

    [제공 소스코드]
    다음 테스트 케이스 문서를 참고해서 MCP로 테스트 할 수 있는 테스트 시나리오를 만들어주세요.
    %s

    [응답 형식]
    반드시 아래 JSON 형식으로만 응답하세요. 마크다운 코드 블록(```)이나 다른 설명을 포함하지 마세요.

    [
        {
          "title": "시나리오 제목",
          "description": "시나리오 설명",
          "steps": [
            "1. 첫 번째 단계",
            "2. 두 번째 단계",
            "3. 세 번째 단계"
          ],
          "expectedResult": "기대되는 결과",
        },
        {
          "title": "두 번째 시나리오 제목",
          "description": "두 번째 시나리오 설명",
          "steps": [
            "1. 단계",
            "2. 단계"
          ],
          "expectedResult": "기대되는 결과~",
        }
    ]
    

    최소 1개 이상의 시나리오를 생성하세요. 순수 JSON만 출력하세요.

  mcp_system_prompt: |
    당신은 모바일 앱 테스트 자동화 에이전트입니다.
    
    주어지는 테스트시나리오대로 mcp를 이용해여, 앱을 테스트 하고, 결과 보고서를 작성해주세요.
    사용가능한 도구를 이용해서 테스트 시나리오대로 앱을 테스트하면 됩니다.
    
    
    [앱 환경 접근 정보]
    앱 이름 : y박스
    계정정보 : id -> lsh9672 / pw -> 1q2w3e4r@@
    앱 연결 정보 : %s
    
    
    [주의사항]    
    아래의 도구는 사용 금지입니다.
    - spring_ai_mcp_client_mobile_mcp_mobile_take_screenshot
    - spring_ai_mcp_client_mobile_mcp_mobile_save_screenshot
    
    
    [결과보고서형식]
    1. md 파일 형식일 것.
    2. 테스트 한 내용이 성공인지 실패인지 표로 나타낼것.
    3. md 파일형식에서 표를 제외한 어떠한 값도 넣지 말것.
  

  mcp_user_prompt: |
    mcp를 이용해서 앱테스트를 진행할 예정입니다
    연결된 앱을 찾아서 아래의 동작들을 수행해주세요.
    이미 앱이 켜져있으면 완전히 종료후에 다시 실행 후, 진행하세요.
    
    [앱 연결정보]
    %s

    [주의사항]
    좌표 클릭 시 반드시 x, y 값을 숫자로 제공하세요.
    예시: {"x": 720, "y": 2798}
    좌표 클릭을 위해서 mcp 도구를 호출하게 되면 반드시 x,y좌표의 값이 제대로 있는지 확인해주세요.
    절대로 undefined로 값을 넘기면 안됩니다.

    - 잘못 사용된 예
    [
      {
        "code": "invalid_type",
        "expected": "number",
        "received": "undefined",
        "path": [
          "y"
        ],
        "message": "Required"
      }
    ]

    [초기 접근시 메인화면이 안나올 경우.]
    1. 디바이스 접근이나 연락처 접근 전부 허용(allow)누르기
    2. 하단의 다음버튼 눌러서 메인화면으로 이동.

    [수행할 동작]
    %s
    
